#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_3155115096055378676) {
   out_3155115096055378676[0] = 0;
   out_3155115096055378676[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_3155115096055378676[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_3155115096055378676[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_3155115096055378676[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_3155115096055378676[5] = -sin(in_vec[1]);
   out_3155115096055378676[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3155115096055378676[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3155115096055378676[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_3155115096055378676[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_3155115096055378676[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_3155115096055378676[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_3155115096055378676[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3155115096055378676[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3155115096055378676[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_3155115096055378676[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_3155115096055378676[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_3155115096055378676[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_8395496394702832161) {
   out_8395496394702832161[0] = delta_x[0] + nom_x[0];
   out_8395496394702832161[1] = delta_x[1] + nom_x[1];
   out_8395496394702832161[2] = delta_x[2] + nom_x[2];
   out_8395496394702832161[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_8395496394702832161[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_8395496394702832161[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_8395496394702832161[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_8395496394702832161[7] = delta_x[6] + nom_x[7];
   out_8395496394702832161[8] = delta_x[7] + nom_x[8];
   out_8395496394702832161[9] = delta_x[8] + nom_x[9];
   out_8395496394702832161[10] = delta_x[9] + nom_x[10];
   out_8395496394702832161[11] = delta_x[10] + nom_x[11];
   out_8395496394702832161[12] = delta_x[11] + nom_x[12];
   out_8395496394702832161[13] = delta_x[12] + nom_x[13];
   out_8395496394702832161[14] = delta_x[13] + nom_x[14];
   out_8395496394702832161[15] = delta_x[14] + nom_x[15];
   out_8395496394702832161[16] = delta_x[15] + nom_x[16];
   out_8395496394702832161[17] = delta_x[16] + nom_x[17];
   out_8395496394702832161[18] = delta_x[17] + nom_x[18];
   out_8395496394702832161[19] = delta_x[18] + nom_x[19];
   out_8395496394702832161[20] = delta_x[19] + nom_x[20];
   out_8395496394702832161[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_8916956029375892266) {
   out_8916956029375892266[0] = -nom_x[0] + true_x[0];
   out_8916956029375892266[1] = -nom_x[1] + true_x[1];
   out_8916956029375892266[2] = -nom_x[2] + true_x[2];
   out_8916956029375892266[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_8916956029375892266[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_8916956029375892266[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_8916956029375892266[6] = -nom_x[7] + true_x[7];
   out_8916956029375892266[7] = -nom_x[8] + true_x[8];
   out_8916956029375892266[8] = -nom_x[9] + true_x[9];
   out_8916956029375892266[9] = -nom_x[10] + true_x[10];
   out_8916956029375892266[10] = -nom_x[11] + true_x[11];
   out_8916956029375892266[11] = -nom_x[12] + true_x[12];
   out_8916956029375892266[12] = -nom_x[13] + true_x[13];
   out_8916956029375892266[13] = -nom_x[14] + true_x[14];
   out_8916956029375892266[14] = -nom_x[15] + true_x[15];
   out_8916956029375892266[15] = -nom_x[16] + true_x[16];
   out_8916956029375892266[16] = -nom_x[17] + true_x[17];
   out_8916956029375892266[17] = -nom_x[18] + true_x[18];
   out_8916956029375892266[18] = -nom_x[19] + true_x[19];
   out_8916956029375892266[19] = -nom_x[20] + true_x[20];
   out_8916956029375892266[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_4679673059438427241) {
   out_4679673059438427241[0] = 1.0;
   out_4679673059438427241[1] = 0;
   out_4679673059438427241[2] = 0;
   out_4679673059438427241[3] = 0;
   out_4679673059438427241[4] = 0;
   out_4679673059438427241[5] = 0;
   out_4679673059438427241[6] = 0;
   out_4679673059438427241[7] = 0;
   out_4679673059438427241[8] = 0;
   out_4679673059438427241[9] = 0;
   out_4679673059438427241[10] = 0;
   out_4679673059438427241[11] = 0;
   out_4679673059438427241[12] = 0;
   out_4679673059438427241[13] = 0;
   out_4679673059438427241[14] = 0;
   out_4679673059438427241[15] = 0;
   out_4679673059438427241[16] = 0;
   out_4679673059438427241[17] = 0;
   out_4679673059438427241[18] = 0;
   out_4679673059438427241[19] = 0;
   out_4679673059438427241[20] = 0;
   out_4679673059438427241[21] = 0;
   out_4679673059438427241[22] = 1.0;
   out_4679673059438427241[23] = 0;
   out_4679673059438427241[24] = 0;
   out_4679673059438427241[25] = 0;
   out_4679673059438427241[26] = 0;
   out_4679673059438427241[27] = 0;
   out_4679673059438427241[28] = 0;
   out_4679673059438427241[29] = 0;
   out_4679673059438427241[30] = 0;
   out_4679673059438427241[31] = 0;
   out_4679673059438427241[32] = 0;
   out_4679673059438427241[33] = 0;
   out_4679673059438427241[34] = 0;
   out_4679673059438427241[35] = 0;
   out_4679673059438427241[36] = 0;
   out_4679673059438427241[37] = 0;
   out_4679673059438427241[38] = 0;
   out_4679673059438427241[39] = 0;
   out_4679673059438427241[40] = 0;
   out_4679673059438427241[41] = 0;
   out_4679673059438427241[42] = 0;
   out_4679673059438427241[43] = 0;
   out_4679673059438427241[44] = 1.0;
   out_4679673059438427241[45] = 0;
   out_4679673059438427241[46] = 0;
   out_4679673059438427241[47] = 0;
   out_4679673059438427241[48] = 0;
   out_4679673059438427241[49] = 0;
   out_4679673059438427241[50] = 0;
   out_4679673059438427241[51] = 0;
   out_4679673059438427241[52] = 0;
   out_4679673059438427241[53] = 0;
   out_4679673059438427241[54] = 0;
   out_4679673059438427241[55] = 0;
   out_4679673059438427241[56] = 0;
   out_4679673059438427241[57] = 0;
   out_4679673059438427241[58] = 0;
   out_4679673059438427241[59] = 0;
   out_4679673059438427241[60] = 0;
   out_4679673059438427241[61] = 0;
   out_4679673059438427241[62] = 0;
   out_4679673059438427241[63] = 0;
   out_4679673059438427241[64] = 0;
   out_4679673059438427241[65] = 0;
   out_4679673059438427241[66] = -0.5*state[4];
   out_4679673059438427241[67] = -0.5*state[5];
   out_4679673059438427241[68] = -0.5*state[6];
   out_4679673059438427241[69] = 0;
   out_4679673059438427241[70] = 0;
   out_4679673059438427241[71] = 0;
   out_4679673059438427241[72] = 0;
   out_4679673059438427241[73] = 0;
   out_4679673059438427241[74] = 0;
   out_4679673059438427241[75] = 0;
   out_4679673059438427241[76] = 0;
   out_4679673059438427241[77] = 0;
   out_4679673059438427241[78] = 0;
   out_4679673059438427241[79] = 0;
   out_4679673059438427241[80] = 0;
   out_4679673059438427241[81] = 0;
   out_4679673059438427241[82] = 0;
   out_4679673059438427241[83] = 0;
   out_4679673059438427241[84] = 0;
   out_4679673059438427241[85] = 0;
   out_4679673059438427241[86] = 0;
   out_4679673059438427241[87] = 0.5*state[3];
   out_4679673059438427241[88] = 0.5*state[6];
   out_4679673059438427241[89] = -0.5*state[5];
   out_4679673059438427241[90] = 0;
   out_4679673059438427241[91] = 0;
   out_4679673059438427241[92] = 0;
   out_4679673059438427241[93] = 0;
   out_4679673059438427241[94] = 0;
   out_4679673059438427241[95] = 0;
   out_4679673059438427241[96] = 0;
   out_4679673059438427241[97] = 0;
   out_4679673059438427241[98] = 0;
   out_4679673059438427241[99] = 0;
   out_4679673059438427241[100] = 0;
   out_4679673059438427241[101] = 0;
   out_4679673059438427241[102] = 0;
   out_4679673059438427241[103] = 0;
   out_4679673059438427241[104] = 0;
   out_4679673059438427241[105] = 0;
   out_4679673059438427241[106] = 0;
   out_4679673059438427241[107] = 0;
   out_4679673059438427241[108] = -0.5*state[6];
   out_4679673059438427241[109] = 0.5*state[3];
   out_4679673059438427241[110] = 0.5*state[4];
   out_4679673059438427241[111] = 0;
   out_4679673059438427241[112] = 0;
   out_4679673059438427241[113] = 0;
   out_4679673059438427241[114] = 0;
   out_4679673059438427241[115] = 0;
   out_4679673059438427241[116] = 0;
   out_4679673059438427241[117] = 0;
   out_4679673059438427241[118] = 0;
   out_4679673059438427241[119] = 0;
   out_4679673059438427241[120] = 0;
   out_4679673059438427241[121] = 0;
   out_4679673059438427241[122] = 0;
   out_4679673059438427241[123] = 0;
   out_4679673059438427241[124] = 0;
   out_4679673059438427241[125] = 0;
   out_4679673059438427241[126] = 0;
   out_4679673059438427241[127] = 0;
   out_4679673059438427241[128] = 0;
   out_4679673059438427241[129] = 0.5*state[5];
   out_4679673059438427241[130] = -0.5*state[4];
   out_4679673059438427241[131] = 0.5*state[3];
   out_4679673059438427241[132] = 0;
   out_4679673059438427241[133] = 0;
   out_4679673059438427241[134] = 0;
   out_4679673059438427241[135] = 0;
   out_4679673059438427241[136] = 0;
   out_4679673059438427241[137] = 0;
   out_4679673059438427241[138] = 0;
   out_4679673059438427241[139] = 0;
   out_4679673059438427241[140] = 0;
   out_4679673059438427241[141] = 0;
   out_4679673059438427241[142] = 0;
   out_4679673059438427241[143] = 0;
   out_4679673059438427241[144] = 0;
   out_4679673059438427241[145] = 0;
   out_4679673059438427241[146] = 0;
   out_4679673059438427241[147] = 0;
   out_4679673059438427241[148] = 0;
   out_4679673059438427241[149] = 0;
   out_4679673059438427241[150] = 0;
   out_4679673059438427241[151] = 0;
   out_4679673059438427241[152] = 0;
   out_4679673059438427241[153] = 1.0;
   out_4679673059438427241[154] = 0;
   out_4679673059438427241[155] = 0;
   out_4679673059438427241[156] = 0;
   out_4679673059438427241[157] = 0;
   out_4679673059438427241[158] = 0;
   out_4679673059438427241[159] = 0;
   out_4679673059438427241[160] = 0;
   out_4679673059438427241[161] = 0;
   out_4679673059438427241[162] = 0;
   out_4679673059438427241[163] = 0;
   out_4679673059438427241[164] = 0;
   out_4679673059438427241[165] = 0;
   out_4679673059438427241[166] = 0;
   out_4679673059438427241[167] = 0;
   out_4679673059438427241[168] = 0;
   out_4679673059438427241[169] = 0;
   out_4679673059438427241[170] = 0;
   out_4679673059438427241[171] = 0;
   out_4679673059438427241[172] = 0;
   out_4679673059438427241[173] = 0;
   out_4679673059438427241[174] = 0;
   out_4679673059438427241[175] = 1.0;
   out_4679673059438427241[176] = 0;
   out_4679673059438427241[177] = 0;
   out_4679673059438427241[178] = 0;
   out_4679673059438427241[179] = 0;
   out_4679673059438427241[180] = 0;
   out_4679673059438427241[181] = 0;
   out_4679673059438427241[182] = 0;
   out_4679673059438427241[183] = 0;
   out_4679673059438427241[184] = 0;
   out_4679673059438427241[185] = 0;
   out_4679673059438427241[186] = 0;
   out_4679673059438427241[187] = 0;
   out_4679673059438427241[188] = 0;
   out_4679673059438427241[189] = 0;
   out_4679673059438427241[190] = 0;
   out_4679673059438427241[191] = 0;
   out_4679673059438427241[192] = 0;
   out_4679673059438427241[193] = 0;
   out_4679673059438427241[194] = 0;
   out_4679673059438427241[195] = 0;
   out_4679673059438427241[196] = 0;
   out_4679673059438427241[197] = 1.0;
   out_4679673059438427241[198] = 0;
   out_4679673059438427241[199] = 0;
   out_4679673059438427241[200] = 0;
   out_4679673059438427241[201] = 0;
   out_4679673059438427241[202] = 0;
   out_4679673059438427241[203] = 0;
   out_4679673059438427241[204] = 0;
   out_4679673059438427241[205] = 0;
   out_4679673059438427241[206] = 0;
   out_4679673059438427241[207] = 0;
   out_4679673059438427241[208] = 0;
   out_4679673059438427241[209] = 0;
   out_4679673059438427241[210] = 0;
   out_4679673059438427241[211] = 0;
   out_4679673059438427241[212] = 0;
   out_4679673059438427241[213] = 0;
   out_4679673059438427241[214] = 0;
   out_4679673059438427241[215] = 0;
   out_4679673059438427241[216] = 0;
   out_4679673059438427241[217] = 0;
   out_4679673059438427241[218] = 0;
   out_4679673059438427241[219] = 1.0;
   out_4679673059438427241[220] = 0;
   out_4679673059438427241[221] = 0;
   out_4679673059438427241[222] = 0;
   out_4679673059438427241[223] = 0;
   out_4679673059438427241[224] = 0;
   out_4679673059438427241[225] = 0;
   out_4679673059438427241[226] = 0;
   out_4679673059438427241[227] = 0;
   out_4679673059438427241[228] = 0;
   out_4679673059438427241[229] = 0;
   out_4679673059438427241[230] = 0;
   out_4679673059438427241[231] = 0;
   out_4679673059438427241[232] = 0;
   out_4679673059438427241[233] = 0;
   out_4679673059438427241[234] = 0;
   out_4679673059438427241[235] = 0;
   out_4679673059438427241[236] = 0;
   out_4679673059438427241[237] = 0;
   out_4679673059438427241[238] = 0;
   out_4679673059438427241[239] = 0;
   out_4679673059438427241[240] = 0;
   out_4679673059438427241[241] = 1.0;
   out_4679673059438427241[242] = 0;
   out_4679673059438427241[243] = 0;
   out_4679673059438427241[244] = 0;
   out_4679673059438427241[245] = 0;
   out_4679673059438427241[246] = 0;
   out_4679673059438427241[247] = 0;
   out_4679673059438427241[248] = 0;
   out_4679673059438427241[249] = 0;
   out_4679673059438427241[250] = 0;
   out_4679673059438427241[251] = 0;
   out_4679673059438427241[252] = 0;
   out_4679673059438427241[253] = 0;
   out_4679673059438427241[254] = 0;
   out_4679673059438427241[255] = 0;
   out_4679673059438427241[256] = 0;
   out_4679673059438427241[257] = 0;
   out_4679673059438427241[258] = 0;
   out_4679673059438427241[259] = 0;
   out_4679673059438427241[260] = 0;
   out_4679673059438427241[261] = 0;
   out_4679673059438427241[262] = 0;
   out_4679673059438427241[263] = 1.0;
   out_4679673059438427241[264] = 0;
   out_4679673059438427241[265] = 0;
   out_4679673059438427241[266] = 0;
   out_4679673059438427241[267] = 0;
   out_4679673059438427241[268] = 0;
   out_4679673059438427241[269] = 0;
   out_4679673059438427241[270] = 0;
   out_4679673059438427241[271] = 0;
   out_4679673059438427241[272] = 0;
   out_4679673059438427241[273] = 0;
   out_4679673059438427241[274] = 0;
   out_4679673059438427241[275] = 0;
   out_4679673059438427241[276] = 0;
   out_4679673059438427241[277] = 0;
   out_4679673059438427241[278] = 0;
   out_4679673059438427241[279] = 0;
   out_4679673059438427241[280] = 0;
   out_4679673059438427241[281] = 0;
   out_4679673059438427241[282] = 0;
   out_4679673059438427241[283] = 0;
   out_4679673059438427241[284] = 0;
   out_4679673059438427241[285] = 1.0;
   out_4679673059438427241[286] = 0;
   out_4679673059438427241[287] = 0;
   out_4679673059438427241[288] = 0;
   out_4679673059438427241[289] = 0;
   out_4679673059438427241[290] = 0;
   out_4679673059438427241[291] = 0;
   out_4679673059438427241[292] = 0;
   out_4679673059438427241[293] = 0;
   out_4679673059438427241[294] = 0;
   out_4679673059438427241[295] = 0;
   out_4679673059438427241[296] = 0;
   out_4679673059438427241[297] = 0;
   out_4679673059438427241[298] = 0;
   out_4679673059438427241[299] = 0;
   out_4679673059438427241[300] = 0;
   out_4679673059438427241[301] = 0;
   out_4679673059438427241[302] = 0;
   out_4679673059438427241[303] = 0;
   out_4679673059438427241[304] = 0;
   out_4679673059438427241[305] = 0;
   out_4679673059438427241[306] = 0;
   out_4679673059438427241[307] = 1.0;
   out_4679673059438427241[308] = 0;
   out_4679673059438427241[309] = 0;
   out_4679673059438427241[310] = 0;
   out_4679673059438427241[311] = 0;
   out_4679673059438427241[312] = 0;
   out_4679673059438427241[313] = 0;
   out_4679673059438427241[314] = 0;
   out_4679673059438427241[315] = 0;
   out_4679673059438427241[316] = 0;
   out_4679673059438427241[317] = 0;
   out_4679673059438427241[318] = 0;
   out_4679673059438427241[319] = 0;
   out_4679673059438427241[320] = 0;
   out_4679673059438427241[321] = 0;
   out_4679673059438427241[322] = 0;
   out_4679673059438427241[323] = 0;
   out_4679673059438427241[324] = 0;
   out_4679673059438427241[325] = 0;
   out_4679673059438427241[326] = 0;
   out_4679673059438427241[327] = 0;
   out_4679673059438427241[328] = 0;
   out_4679673059438427241[329] = 1.0;
   out_4679673059438427241[330] = 0;
   out_4679673059438427241[331] = 0;
   out_4679673059438427241[332] = 0;
   out_4679673059438427241[333] = 0;
   out_4679673059438427241[334] = 0;
   out_4679673059438427241[335] = 0;
   out_4679673059438427241[336] = 0;
   out_4679673059438427241[337] = 0;
   out_4679673059438427241[338] = 0;
   out_4679673059438427241[339] = 0;
   out_4679673059438427241[340] = 0;
   out_4679673059438427241[341] = 0;
   out_4679673059438427241[342] = 0;
   out_4679673059438427241[343] = 0;
   out_4679673059438427241[344] = 0;
   out_4679673059438427241[345] = 0;
   out_4679673059438427241[346] = 0;
   out_4679673059438427241[347] = 0;
   out_4679673059438427241[348] = 0;
   out_4679673059438427241[349] = 0;
   out_4679673059438427241[350] = 0;
   out_4679673059438427241[351] = 1.0;
   out_4679673059438427241[352] = 0;
   out_4679673059438427241[353] = 0;
   out_4679673059438427241[354] = 0;
   out_4679673059438427241[355] = 0;
   out_4679673059438427241[356] = 0;
   out_4679673059438427241[357] = 0;
   out_4679673059438427241[358] = 0;
   out_4679673059438427241[359] = 0;
   out_4679673059438427241[360] = 0;
   out_4679673059438427241[361] = 0;
   out_4679673059438427241[362] = 0;
   out_4679673059438427241[363] = 0;
   out_4679673059438427241[364] = 0;
   out_4679673059438427241[365] = 0;
   out_4679673059438427241[366] = 0;
   out_4679673059438427241[367] = 0;
   out_4679673059438427241[368] = 0;
   out_4679673059438427241[369] = 0;
   out_4679673059438427241[370] = 0;
   out_4679673059438427241[371] = 0;
   out_4679673059438427241[372] = 0;
   out_4679673059438427241[373] = 1.0;
   out_4679673059438427241[374] = 0;
   out_4679673059438427241[375] = 0;
   out_4679673059438427241[376] = 0;
   out_4679673059438427241[377] = 0;
   out_4679673059438427241[378] = 0;
   out_4679673059438427241[379] = 0;
   out_4679673059438427241[380] = 0;
   out_4679673059438427241[381] = 0;
   out_4679673059438427241[382] = 0;
   out_4679673059438427241[383] = 0;
   out_4679673059438427241[384] = 0;
   out_4679673059438427241[385] = 0;
   out_4679673059438427241[386] = 0;
   out_4679673059438427241[387] = 0;
   out_4679673059438427241[388] = 0;
   out_4679673059438427241[389] = 0;
   out_4679673059438427241[390] = 0;
   out_4679673059438427241[391] = 0;
   out_4679673059438427241[392] = 0;
   out_4679673059438427241[393] = 0;
   out_4679673059438427241[394] = 0;
   out_4679673059438427241[395] = 1.0;
   out_4679673059438427241[396] = 0;
   out_4679673059438427241[397] = 0;
   out_4679673059438427241[398] = 0;
   out_4679673059438427241[399] = 0;
   out_4679673059438427241[400] = 0;
   out_4679673059438427241[401] = 0;
   out_4679673059438427241[402] = 0;
   out_4679673059438427241[403] = 0;
   out_4679673059438427241[404] = 0;
   out_4679673059438427241[405] = 0;
   out_4679673059438427241[406] = 0;
   out_4679673059438427241[407] = 0;
   out_4679673059438427241[408] = 0;
   out_4679673059438427241[409] = 0;
   out_4679673059438427241[410] = 0;
   out_4679673059438427241[411] = 0;
   out_4679673059438427241[412] = 0;
   out_4679673059438427241[413] = 0;
   out_4679673059438427241[414] = 0;
   out_4679673059438427241[415] = 0;
   out_4679673059438427241[416] = 0;
   out_4679673059438427241[417] = 1.0;
   out_4679673059438427241[418] = 0;
   out_4679673059438427241[419] = 0;
   out_4679673059438427241[420] = 0;
   out_4679673059438427241[421] = 0;
   out_4679673059438427241[422] = 0;
   out_4679673059438427241[423] = 0;
   out_4679673059438427241[424] = 0;
   out_4679673059438427241[425] = 0;
   out_4679673059438427241[426] = 0;
   out_4679673059438427241[427] = 0;
   out_4679673059438427241[428] = 0;
   out_4679673059438427241[429] = 0;
   out_4679673059438427241[430] = 0;
   out_4679673059438427241[431] = 0;
   out_4679673059438427241[432] = 0;
   out_4679673059438427241[433] = 0;
   out_4679673059438427241[434] = 0;
   out_4679673059438427241[435] = 0;
   out_4679673059438427241[436] = 0;
   out_4679673059438427241[437] = 0;
   out_4679673059438427241[438] = 0;
   out_4679673059438427241[439] = 1.0;
   out_4679673059438427241[440] = 0;
   out_4679673059438427241[441] = 0;
   out_4679673059438427241[442] = 0;
   out_4679673059438427241[443] = 0;
   out_4679673059438427241[444] = 0;
   out_4679673059438427241[445] = 0;
   out_4679673059438427241[446] = 0;
   out_4679673059438427241[447] = 0;
   out_4679673059438427241[448] = 0;
   out_4679673059438427241[449] = 0;
   out_4679673059438427241[450] = 0;
   out_4679673059438427241[451] = 0;
   out_4679673059438427241[452] = 0;
   out_4679673059438427241[453] = 0;
   out_4679673059438427241[454] = 0;
   out_4679673059438427241[455] = 0;
   out_4679673059438427241[456] = 0;
   out_4679673059438427241[457] = 0;
   out_4679673059438427241[458] = 0;
   out_4679673059438427241[459] = 0;
   out_4679673059438427241[460] = 0;
   out_4679673059438427241[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_8106099418900950754) {
   out_8106099418900950754[0] = dt*state[7] + state[0];
   out_8106099418900950754[1] = dt*state[8] + state[1];
   out_8106099418900950754[2] = dt*state[9] + state[2];
   out_8106099418900950754[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_8106099418900950754[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_8106099418900950754[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_8106099418900950754[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_8106099418900950754[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_8106099418900950754[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_8106099418900950754[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_8106099418900950754[10] = state[10];
   out_8106099418900950754[11] = state[11];
   out_8106099418900950754[12] = state[12];
   out_8106099418900950754[13] = state[13];
   out_8106099418900950754[14] = state[14];
   out_8106099418900950754[15] = state[15];
   out_8106099418900950754[16] = state[16];
   out_8106099418900950754[17] = state[17];
   out_8106099418900950754[18] = state[18];
   out_8106099418900950754[19] = state[19];
   out_8106099418900950754[20] = state[20];
   out_8106099418900950754[21] = state[21];
}
void F_fun(double *state, double dt, double *out_4673684726810862167) {
   out_4673684726810862167[0] = 1;
   out_4673684726810862167[1] = 0;
   out_4673684726810862167[2] = 0;
   out_4673684726810862167[3] = 0;
   out_4673684726810862167[4] = 0;
   out_4673684726810862167[5] = 0;
   out_4673684726810862167[6] = dt;
   out_4673684726810862167[7] = 0;
   out_4673684726810862167[8] = 0;
   out_4673684726810862167[9] = 0;
   out_4673684726810862167[10] = 0;
   out_4673684726810862167[11] = 0;
   out_4673684726810862167[12] = 0;
   out_4673684726810862167[13] = 0;
   out_4673684726810862167[14] = 0;
   out_4673684726810862167[15] = 0;
   out_4673684726810862167[16] = 0;
   out_4673684726810862167[17] = 0;
   out_4673684726810862167[18] = 0;
   out_4673684726810862167[19] = 0;
   out_4673684726810862167[20] = 0;
   out_4673684726810862167[21] = 0;
   out_4673684726810862167[22] = 1;
   out_4673684726810862167[23] = 0;
   out_4673684726810862167[24] = 0;
   out_4673684726810862167[25] = 0;
   out_4673684726810862167[26] = 0;
   out_4673684726810862167[27] = 0;
   out_4673684726810862167[28] = dt;
   out_4673684726810862167[29] = 0;
   out_4673684726810862167[30] = 0;
   out_4673684726810862167[31] = 0;
   out_4673684726810862167[32] = 0;
   out_4673684726810862167[33] = 0;
   out_4673684726810862167[34] = 0;
   out_4673684726810862167[35] = 0;
   out_4673684726810862167[36] = 0;
   out_4673684726810862167[37] = 0;
   out_4673684726810862167[38] = 0;
   out_4673684726810862167[39] = 0;
   out_4673684726810862167[40] = 0;
   out_4673684726810862167[41] = 0;
   out_4673684726810862167[42] = 0;
   out_4673684726810862167[43] = 0;
   out_4673684726810862167[44] = 1;
   out_4673684726810862167[45] = 0;
   out_4673684726810862167[46] = 0;
   out_4673684726810862167[47] = 0;
   out_4673684726810862167[48] = 0;
   out_4673684726810862167[49] = 0;
   out_4673684726810862167[50] = dt;
   out_4673684726810862167[51] = 0;
   out_4673684726810862167[52] = 0;
   out_4673684726810862167[53] = 0;
   out_4673684726810862167[54] = 0;
   out_4673684726810862167[55] = 0;
   out_4673684726810862167[56] = 0;
   out_4673684726810862167[57] = 0;
   out_4673684726810862167[58] = 0;
   out_4673684726810862167[59] = 0;
   out_4673684726810862167[60] = 0;
   out_4673684726810862167[61] = 0;
   out_4673684726810862167[62] = 0;
   out_4673684726810862167[63] = 0;
   out_4673684726810862167[64] = 0;
   out_4673684726810862167[65] = 0;
   out_4673684726810862167[66] = 1;
   out_4673684726810862167[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4673684726810862167[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_4673684726810862167[69] = 0;
   out_4673684726810862167[70] = 0;
   out_4673684726810862167[71] = 0;
   out_4673684726810862167[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4673684726810862167[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4673684726810862167[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4673684726810862167[75] = 0;
   out_4673684726810862167[76] = 0;
   out_4673684726810862167[77] = 0;
   out_4673684726810862167[78] = 0;
   out_4673684726810862167[79] = 0;
   out_4673684726810862167[80] = 0;
   out_4673684726810862167[81] = 0;
   out_4673684726810862167[82] = 0;
   out_4673684726810862167[83] = 0;
   out_4673684726810862167[84] = 0;
   out_4673684726810862167[85] = 0;
   out_4673684726810862167[86] = 0;
   out_4673684726810862167[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4673684726810862167[88] = 1;
   out_4673684726810862167[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_4673684726810862167[90] = 0;
   out_4673684726810862167[91] = 0;
   out_4673684726810862167[92] = 0;
   out_4673684726810862167[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4673684726810862167[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4673684726810862167[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4673684726810862167[96] = 0;
   out_4673684726810862167[97] = 0;
   out_4673684726810862167[98] = 0;
   out_4673684726810862167[99] = 0;
   out_4673684726810862167[100] = 0;
   out_4673684726810862167[101] = 0;
   out_4673684726810862167[102] = 0;
   out_4673684726810862167[103] = 0;
   out_4673684726810862167[104] = 0;
   out_4673684726810862167[105] = 0;
   out_4673684726810862167[106] = 0;
   out_4673684726810862167[107] = 0;
   out_4673684726810862167[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_4673684726810862167[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_4673684726810862167[110] = 1;
   out_4673684726810862167[111] = 0;
   out_4673684726810862167[112] = 0;
   out_4673684726810862167[113] = 0;
   out_4673684726810862167[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4673684726810862167[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4673684726810862167[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4673684726810862167[117] = 0;
   out_4673684726810862167[118] = 0;
   out_4673684726810862167[119] = 0;
   out_4673684726810862167[120] = 0;
   out_4673684726810862167[121] = 0;
   out_4673684726810862167[122] = 0;
   out_4673684726810862167[123] = 0;
   out_4673684726810862167[124] = 0;
   out_4673684726810862167[125] = 0;
   out_4673684726810862167[126] = 0;
   out_4673684726810862167[127] = 0;
   out_4673684726810862167[128] = 0;
   out_4673684726810862167[129] = 0;
   out_4673684726810862167[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4673684726810862167[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_4673684726810862167[132] = 1;
   out_4673684726810862167[133] = 0;
   out_4673684726810862167[134] = 0;
   out_4673684726810862167[135] = 0;
   out_4673684726810862167[136] = 0;
   out_4673684726810862167[137] = 0;
   out_4673684726810862167[138] = 0;
   out_4673684726810862167[139] = 0;
   out_4673684726810862167[140] = 0;
   out_4673684726810862167[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4673684726810862167[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4673684726810862167[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4673684726810862167[144] = 0;
   out_4673684726810862167[145] = 0;
   out_4673684726810862167[146] = 0;
   out_4673684726810862167[147] = 0;
   out_4673684726810862167[148] = 0;
   out_4673684726810862167[149] = 0;
   out_4673684726810862167[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4673684726810862167[151] = 0;
   out_4673684726810862167[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_4673684726810862167[153] = 0;
   out_4673684726810862167[154] = 1;
   out_4673684726810862167[155] = 0;
   out_4673684726810862167[156] = 0;
   out_4673684726810862167[157] = 0;
   out_4673684726810862167[158] = 0;
   out_4673684726810862167[159] = 0;
   out_4673684726810862167[160] = 0;
   out_4673684726810862167[161] = 0;
   out_4673684726810862167[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4673684726810862167[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4673684726810862167[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4673684726810862167[165] = 0;
   out_4673684726810862167[166] = 0;
   out_4673684726810862167[167] = 0;
   out_4673684726810862167[168] = 0;
   out_4673684726810862167[169] = 0;
   out_4673684726810862167[170] = 0;
   out_4673684726810862167[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_4673684726810862167[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_4673684726810862167[173] = 0;
   out_4673684726810862167[174] = 0;
   out_4673684726810862167[175] = 0;
   out_4673684726810862167[176] = 1;
   out_4673684726810862167[177] = 0;
   out_4673684726810862167[178] = 0;
   out_4673684726810862167[179] = 0;
   out_4673684726810862167[180] = 0;
   out_4673684726810862167[181] = 0;
   out_4673684726810862167[182] = 0;
   out_4673684726810862167[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4673684726810862167[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4673684726810862167[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4673684726810862167[186] = 0;
   out_4673684726810862167[187] = 0;
   out_4673684726810862167[188] = 0;
   out_4673684726810862167[189] = 0;
   out_4673684726810862167[190] = 0;
   out_4673684726810862167[191] = 0;
   out_4673684726810862167[192] = 0;
   out_4673684726810862167[193] = 0;
   out_4673684726810862167[194] = 0;
   out_4673684726810862167[195] = 0;
   out_4673684726810862167[196] = 0;
   out_4673684726810862167[197] = 0;
   out_4673684726810862167[198] = 1;
   out_4673684726810862167[199] = 0;
   out_4673684726810862167[200] = 0;
   out_4673684726810862167[201] = 0;
   out_4673684726810862167[202] = 0;
   out_4673684726810862167[203] = 0;
   out_4673684726810862167[204] = 0;
   out_4673684726810862167[205] = 0;
   out_4673684726810862167[206] = 0;
   out_4673684726810862167[207] = 0;
   out_4673684726810862167[208] = 0;
   out_4673684726810862167[209] = 0;
   out_4673684726810862167[210] = 0;
   out_4673684726810862167[211] = 0;
   out_4673684726810862167[212] = 0;
   out_4673684726810862167[213] = 0;
   out_4673684726810862167[214] = 0;
   out_4673684726810862167[215] = 0;
   out_4673684726810862167[216] = 0;
   out_4673684726810862167[217] = 0;
   out_4673684726810862167[218] = 0;
   out_4673684726810862167[219] = 0;
   out_4673684726810862167[220] = 1;
   out_4673684726810862167[221] = 0;
   out_4673684726810862167[222] = 0;
   out_4673684726810862167[223] = 0;
   out_4673684726810862167[224] = 0;
   out_4673684726810862167[225] = 0;
   out_4673684726810862167[226] = 0;
   out_4673684726810862167[227] = 0;
   out_4673684726810862167[228] = 0;
   out_4673684726810862167[229] = 0;
   out_4673684726810862167[230] = 0;
   out_4673684726810862167[231] = 0;
   out_4673684726810862167[232] = 0;
   out_4673684726810862167[233] = 0;
   out_4673684726810862167[234] = 0;
   out_4673684726810862167[235] = 0;
   out_4673684726810862167[236] = 0;
   out_4673684726810862167[237] = 0;
   out_4673684726810862167[238] = 0;
   out_4673684726810862167[239] = 0;
   out_4673684726810862167[240] = 0;
   out_4673684726810862167[241] = 0;
   out_4673684726810862167[242] = 1;
   out_4673684726810862167[243] = 0;
   out_4673684726810862167[244] = 0;
   out_4673684726810862167[245] = 0;
   out_4673684726810862167[246] = 0;
   out_4673684726810862167[247] = 0;
   out_4673684726810862167[248] = 0;
   out_4673684726810862167[249] = 0;
   out_4673684726810862167[250] = 0;
   out_4673684726810862167[251] = 0;
   out_4673684726810862167[252] = 0;
   out_4673684726810862167[253] = 0;
   out_4673684726810862167[254] = 0;
   out_4673684726810862167[255] = 0;
   out_4673684726810862167[256] = 0;
   out_4673684726810862167[257] = 0;
   out_4673684726810862167[258] = 0;
   out_4673684726810862167[259] = 0;
   out_4673684726810862167[260] = 0;
   out_4673684726810862167[261] = 0;
   out_4673684726810862167[262] = 0;
   out_4673684726810862167[263] = 0;
   out_4673684726810862167[264] = 1;
   out_4673684726810862167[265] = 0;
   out_4673684726810862167[266] = 0;
   out_4673684726810862167[267] = 0;
   out_4673684726810862167[268] = 0;
   out_4673684726810862167[269] = 0;
   out_4673684726810862167[270] = 0;
   out_4673684726810862167[271] = 0;
   out_4673684726810862167[272] = 0;
   out_4673684726810862167[273] = 0;
   out_4673684726810862167[274] = 0;
   out_4673684726810862167[275] = 0;
   out_4673684726810862167[276] = 0;
   out_4673684726810862167[277] = 0;
   out_4673684726810862167[278] = 0;
   out_4673684726810862167[279] = 0;
   out_4673684726810862167[280] = 0;
   out_4673684726810862167[281] = 0;
   out_4673684726810862167[282] = 0;
   out_4673684726810862167[283] = 0;
   out_4673684726810862167[284] = 0;
   out_4673684726810862167[285] = 0;
   out_4673684726810862167[286] = 1;
   out_4673684726810862167[287] = 0;
   out_4673684726810862167[288] = 0;
   out_4673684726810862167[289] = 0;
   out_4673684726810862167[290] = 0;
   out_4673684726810862167[291] = 0;
   out_4673684726810862167[292] = 0;
   out_4673684726810862167[293] = 0;
   out_4673684726810862167[294] = 0;
   out_4673684726810862167[295] = 0;
   out_4673684726810862167[296] = 0;
   out_4673684726810862167[297] = 0;
   out_4673684726810862167[298] = 0;
   out_4673684726810862167[299] = 0;
   out_4673684726810862167[300] = 0;
   out_4673684726810862167[301] = 0;
   out_4673684726810862167[302] = 0;
   out_4673684726810862167[303] = 0;
   out_4673684726810862167[304] = 0;
   out_4673684726810862167[305] = 0;
   out_4673684726810862167[306] = 0;
   out_4673684726810862167[307] = 0;
   out_4673684726810862167[308] = 1;
   out_4673684726810862167[309] = 0;
   out_4673684726810862167[310] = 0;
   out_4673684726810862167[311] = 0;
   out_4673684726810862167[312] = 0;
   out_4673684726810862167[313] = 0;
   out_4673684726810862167[314] = 0;
   out_4673684726810862167[315] = 0;
   out_4673684726810862167[316] = 0;
   out_4673684726810862167[317] = 0;
   out_4673684726810862167[318] = 0;
   out_4673684726810862167[319] = 0;
   out_4673684726810862167[320] = 0;
   out_4673684726810862167[321] = 0;
   out_4673684726810862167[322] = 0;
   out_4673684726810862167[323] = 0;
   out_4673684726810862167[324] = 0;
   out_4673684726810862167[325] = 0;
   out_4673684726810862167[326] = 0;
   out_4673684726810862167[327] = 0;
   out_4673684726810862167[328] = 0;
   out_4673684726810862167[329] = 0;
   out_4673684726810862167[330] = 1;
   out_4673684726810862167[331] = 0;
   out_4673684726810862167[332] = 0;
   out_4673684726810862167[333] = 0;
   out_4673684726810862167[334] = 0;
   out_4673684726810862167[335] = 0;
   out_4673684726810862167[336] = 0;
   out_4673684726810862167[337] = 0;
   out_4673684726810862167[338] = 0;
   out_4673684726810862167[339] = 0;
   out_4673684726810862167[340] = 0;
   out_4673684726810862167[341] = 0;
   out_4673684726810862167[342] = 0;
   out_4673684726810862167[343] = 0;
   out_4673684726810862167[344] = 0;
   out_4673684726810862167[345] = 0;
   out_4673684726810862167[346] = 0;
   out_4673684726810862167[347] = 0;
   out_4673684726810862167[348] = 0;
   out_4673684726810862167[349] = 0;
   out_4673684726810862167[350] = 0;
   out_4673684726810862167[351] = 0;
   out_4673684726810862167[352] = 1;
   out_4673684726810862167[353] = 0;
   out_4673684726810862167[354] = 0;
   out_4673684726810862167[355] = 0;
   out_4673684726810862167[356] = 0;
   out_4673684726810862167[357] = 0;
   out_4673684726810862167[358] = 0;
   out_4673684726810862167[359] = 0;
   out_4673684726810862167[360] = 0;
   out_4673684726810862167[361] = 0;
   out_4673684726810862167[362] = 0;
   out_4673684726810862167[363] = 0;
   out_4673684726810862167[364] = 0;
   out_4673684726810862167[365] = 0;
   out_4673684726810862167[366] = 0;
   out_4673684726810862167[367] = 0;
   out_4673684726810862167[368] = 0;
   out_4673684726810862167[369] = 0;
   out_4673684726810862167[370] = 0;
   out_4673684726810862167[371] = 0;
   out_4673684726810862167[372] = 0;
   out_4673684726810862167[373] = 0;
   out_4673684726810862167[374] = 1;
   out_4673684726810862167[375] = 0;
   out_4673684726810862167[376] = 0;
   out_4673684726810862167[377] = 0;
   out_4673684726810862167[378] = 0;
   out_4673684726810862167[379] = 0;
   out_4673684726810862167[380] = 0;
   out_4673684726810862167[381] = 0;
   out_4673684726810862167[382] = 0;
   out_4673684726810862167[383] = 0;
   out_4673684726810862167[384] = 0;
   out_4673684726810862167[385] = 0;
   out_4673684726810862167[386] = 0;
   out_4673684726810862167[387] = 0;
   out_4673684726810862167[388] = 0;
   out_4673684726810862167[389] = 0;
   out_4673684726810862167[390] = 0;
   out_4673684726810862167[391] = 0;
   out_4673684726810862167[392] = 0;
   out_4673684726810862167[393] = 0;
   out_4673684726810862167[394] = 0;
   out_4673684726810862167[395] = 0;
   out_4673684726810862167[396] = 1;
   out_4673684726810862167[397] = 0;
   out_4673684726810862167[398] = 0;
   out_4673684726810862167[399] = 0;
   out_4673684726810862167[400] = 0;
   out_4673684726810862167[401] = 0;
   out_4673684726810862167[402] = 0;
   out_4673684726810862167[403] = 0;
   out_4673684726810862167[404] = 0;
   out_4673684726810862167[405] = 0;
   out_4673684726810862167[406] = 0;
   out_4673684726810862167[407] = 0;
   out_4673684726810862167[408] = 0;
   out_4673684726810862167[409] = 0;
   out_4673684726810862167[410] = 0;
   out_4673684726810862167[411] = 0;
   out_4673684726810862167[412] = 0;
   out_4673684726810862167[413] = 0;
   out_4673684726810862167[414] = 0;
   out_4673684726810862167[415] = 0;
   out_4673684726810862167[416] = 0;
   out_4673684726810862167[417] = 0;
   out_4673684726810862167[418] = 1;
   out_4673684726810862167[419] = 0;
   out_4673684726810862167[420] = 0;
   out_4673684726810862167[421] = 0;
   out_4673684726810862167[422] = 0;
   out_4673684726810862167[423] = 0;
   out_4673684726810862167[424] = 0;
   out_4673684726810862167[425] = 0;
   out_4673684726810862167[426] = 0;
   out_4673684726810862167[427] = 0;
   out_4673684726810862167[428] = 0;
   out_4673684726810862167[429] = 0;
   out_4673684726810862167[430] = 0;
   out_4673684726810862167[431] = 0;
   out_4673684726810862167[432] = 0;
   out_4673684726810862167[433] = 0;
   out_4673684726810862167[434] = 0;
   out_4673684726810862167[435] = 0;
   out_4673684726810862167[436] = 0;
   out_4673684726810862167[437] = 0;
   out_4673684726810862167[438] = 0;
   out_4673684726810862167[439] = 0;
   out_4673684726810862167[440] = 1;
}
void h_4(double *state, double *unused, double *out_5235680874440460819) {
   out_5235680874440460819[0] = state[10] + state[13];
   out_5235680874440460819[1] = state[11] + state[14];
   out_5235680874440460819[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_3623290639705711408) {
   out_3623290639705711408[0] = 0;
   out_3623290639705711408[1] = 0;
   out_3623290639705711408[2] = 0;
   out_3623290639705711408[3] = 0;
   out_3623290639705711408[4] = 0;
   out_3623290639705711408[5] = 0;
   out_3623290639705711408[6] = 0;
   out_3623290639705711408[7] = 0;
   out_3623290639705711408[8] = 0;
   out_3623290639705711408[9] = 0;
   out_3623290639705711408[10] = 1;
   out_3623290639705711408[11] = 0;
   out_3623290639705711408[12] = 0;
   out_3623290639705711408[13] = 1;
   out_3623290639705711408[14] = 0;
   out_3623290639705711408[15] = 0;
   out_3623290639705711408[16] = 0;
   out_3623290639705711408[17] = 0;
   out_3623290639705711408[18] = 0;
   out_3623290639705711408[19] = 0;
   out_3623290639705711408[20] = 0;
   out_3623290639705711408[21] = 0;
   out_3623290639705711408[22] = 0;
   out_3623290639705711408[23] = 0;
   out_3623290639705711408[24] = 0;
   out_3623290639705711408[25] = 0;
   out_3623290639705711408[26] = 0;
   out_3623290639705711408[27] = 0;
   out_3623290639705711408[28] = 0;
   out_3623290639705711408[29] = 0;
   out_3623290639705711408[30] = 0;
   out_3623290639705711408[31] = 0;
   out_3623290639705711408[32] = 0;
   out_3623290639705711408[33] = 1;
   out_3623290639705711408[34] = 0;
   out_3623290639705711408[35] = 0;
   out_3623290639705711408[36] = 1;
   out_3623290639705711408[37] = 0;
   out_3623290639705711408[38] = 0;
   out_3623290639705711408[39] = 0;
   out_3623290639705711408[40] = 0;
   out_3623290639705711408[41] = 0;
   out_3623290639705711408[42] = 0;
   out_3623290639705711408[43] = 0;
   out_3623290639705711408[44] = 0;
   out_3623290639705711408[45] = 0;
   out_3623290639705711408[46] = 0;
   out_3623290639705711408[47] = 0;
   out_3623290639705711408[48] = 0;
   out_3623290639705711408[49] = 0;
   out_3623290639705711408[50] = 0;
   out_3623290639705711408[51] = 0;
   out_3623290639705711408[52] = 0;
   out_3623290639705711408[53] = 0;
   out_3623290639705711408[54] = 0;
   out_3623290639705711408[55] = 0;
   out_3623290639705711408[56] = 1;
   out_3623290639705711408[57] = 0;
   out_3623290639705711408[58] = 0;
   out_3623290639705711408[59] = 1;
   out_3623290639705711408[60] = 0;
   out_3623290639705711408[61] = 0;
   out_3623290639705711408[62] = 0;
   out_3623290639705711408[63] = 0;
   out_3623290639705711408[64] = 0;
   out_3623290639705711408[65] = 0;
}
void h_9(double *state, double *unused, double *out_4479381555540235079) {
   out_4479381555540235079[0] = state[10];
   out_4479381555540235079[1] = state[11];
   out_4479381555540235079[2] = state[12];
}
void H_9(double *state, double *unused, double *out_3864480286335302053) {
   out_3864480286335302053[0] = 0;
   out_3864480286335302053[1] = 0;
   out_3864480286335302053[2] = 0;
   out_3864480286335302053[3] = 0;
   out_3864480286335302053[4] = 0;
   out_3864480286335302053[5] = 0;
   out_3864480286335302053[6] = 0;
   out_3864480286335302053[7] = 0;
   out_3864480286335302053[8] = 0;
   out_3864480286335302053[9] = 0;
   out_3864480286335302053[10] = 1;
   out_3864480286335302053[11] = 0;
   out_3864480286335302053[12] = 0;
   out_3864480286335302053[13] = 0;
   out_3864480286335302053[14] = 0;
   out_3864480286335302053[15] = 0;
   out_3864480286335302053[16] = 0;
   out_3864480286335302053[17] = 0;
   out_3864480286335302053[18] = 0;
   out_3864480286335302053[19] = 0;
   out_3864480286335302053[20] = 0;
   out_3864480286335302053[21] = 0;
   out_3864480286335302053[22] = 0;
   out_3864480286335302053[23] = 0;
   out_3864480286335302053[24] = 0;
   out_3864480286335302053[25] = 0;
   out_3864480286335302053[26] = 0;
   out_3864480286335302053[27] = 0;
   out_3864480286335302053[28] = 0;
   out_3864480286335302053[29] = 0;
   out_3864480286335302053[30] = 0;
   out_3864480286335302053[31] = 0;
   out_3864480286335302053[32] = 0;
   out_3864480286335302053[33] = 1;
   out_3864480286335302053[34] = 0;
   out_3864480286335302053[35] = 0;
   out_3864480286335302053[36] = 0;
   out_3864480286335302053[37] = 0;
   out_3864480286335302053[38] = 0;
   out_3864480286335302053[39] = 0;
   out_3864480286335302053[40] = 0;
   out_3864480286335302053[41] = 0;
   out_3864480286335302053[42] = 0;
   out_3864480286335302053[43] = 0;
   out_3864480286335302053[44] = 0;
   out_3864480286335302053[45] = 0;
   out_3864480286335302053[46] = 0;
   out_3864480286335302053[47] = 0;
   out_3864480286335302053[48] = 0;
   out_3864480286335302053[49] = 0;
   out_3864480286335302053[50] = 0;
   out_3864480286335302053[51] = 0;
   out_3864480286335302053[52] = 0;
   out_3864480286335302053[53] = 0;
   out_3864480286335302053[54] = 0;
   out_3864480286335302053[55] = 0;
   out_3864480286335302053[56] = 1;
   out_3864480286335302053[57] = 0;
   out_3864480286335302053[58] = 0;
   out_3864480286335302053[59] = 0;
   out_3864480286335302053[60] = 0;
   out_3864480286335302053[61] = 0;
   out_3864480286335302053[62] = 0;
   out_3864480286335302053[63] = 0;
   out_3864480286335302053[64] = 0;
   out_3864480286335302053[65] = 0;
}
void h_10(double *state, double *unused, double *out_2164176216250742354) {
   out_2164176216250742354[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_2164176216250742354[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_2164176216250742354[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_3212870814963671173) {
   out_3212870814963671173[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3212870814963671173[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_3212870814963671173[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_3212870814963671173[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3212870814963671173[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3212870814963671173[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3212870814963671173[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3212870814963671173[7] = 0;
   out_3212870814963671173[8] = 0;
   out_3212870814963671173[9] = 0;
   out_3212870814963671173[10] = 0;
   out_3212870814963671173[11] = 0;
   out_3212870814963671173[12] = 0;
   out_3212870814963671173[13] = 0;
   out_3212870814963671173[14] = 0;
   out_3212870814963671173[15] = 0;
   out_3212870814963671173[16] = 1;
   out_3212870814963671173[17] = 0;
   out_3212870814963671173[18] = 0;
   out_3212870814963671173[19] = 1;
   out_3212870814963671173[20] = 0;
   out_3212870814963671173[21] = 0;
   out_3212870814963671173[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_3212870814963671173[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3212870814963671173[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_3212870814963671173[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3212870814963671173[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3212870814963671173[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3212870814963671173[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3212870814963671173[29] = 0;
   out_3212870814963671173[30] = 0;
   out_3212870814963671173[31] = 0;
   out_3212870814963671173[32] = 0;
   out_3212870814963671173[33] = 0;
   out_3212870814963671173[34] = 0;
   out_3212870814963671173[35] = 0;
   out_3212870814963671173[36] = 0;
   out_3212870814963671173[37] = 0;
   out_3212870814963671173[38] = 0;
   out_3212870814963671173[39] = 1;
   out_3212870814963671173[40] = 0;
   out_3212870814963671173[41] = 0;
   out_3212870814963671173[42] = 1;
   out_3212870814963671173[43] = 0;
   out_3212870814963671173[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_3212870814963671173[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_3212870814963671173[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3212870814963671173[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3212870814963671173[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3212870814963671173[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3212870814963671173[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3212870814963671173[51] = 0;
   out_3212870814963671173[52] = 0;
   out_3212870814963671173[53] = 0;
   out_3212870814963671173[54] = 0;
   out_3212870814963671173[55] = 0;
   out_3212870814963671173[56] = 0;
   out_3212870814963671173[57] = 0;
   out_3212870814963671173[58] = 0;
   out_3212870814963671173[59] = 0;
   out_3212870814963671173[60] = 0;
   out_3212870814963671173[61] = 0;
   out_3212870814963671173[62] = 1;
   out_3212870814963671173[63] = 0;
   out_3212870814963671173[64] = 0;
   out_3212870814963671173[65] = 1;
}
void h_12(double *state, double *unused, double *out_4049753783849693471) {
   out_4049753783849693471[0] = state[0];
   out_4049753783849693471[1] = state[1];
   out_4049753783849693471[2] = state[2];
}
void H_12(double *state, double *unused, double *out_8642747047737673203) {
   out_8642747047737673203[0] = 1;
   out_8642747047737673203[1] = 0;
   out_8642747047737673203[2] = 0;
   out_8642747047737673203[3] = 0;
   out_8642747047737673203[4] = 0;
   out_8642747047737673203[5] = 0;
   out_8642747047737673203[6] = 0;
   out_8642747047737673203[7] = 0;
   out_8642747047737673203[8] = 0;
   out_8642747047737673203[9] = 0;
   out_8642747047737673203[10] = 0;
   out_8642747047737673203[11] = 0;
   out_8642747047737673203[12] = 0;
   out_8642747047737673203[13] = 0;
   out_8642747047737673203[14] = 0;
   out_8642747047737673203[15] = 0;
   out_8642747047737673203[16] = 0;
   out_8642747047737673203[17] = 0;
   out_8642747047737673203[18] = 0;
   out_8642747047737673203[19] = 0;
   out_8642747047737673203[20] = 0;
   out_8642747047737673203[21] = 0;
   out_8642747047737673203[22] = 0;
   out_8642747047737673203[23] = 1;
   out_8642747047737673203[24] = 0;
   out_8642747047737673203[25] = 0;
   out_8642747047737673203[26] = 0;
   out_8642747047737673203[27] = 0;
   out_8642747047737673203[28] = 0;
   out_8642747047737673203[29] = 0;
   out_8642747047737673203[30] = 0;
   out_8642747047737673203[31] = 0;
   out_8642747047737673203[32] = 0;
   out_8642747047737673203[33] = 0;
   out_8642747047737673203[34] = 0;
   out_8642747047737673203[35] = 0;
   out_8642747047737673203[36] = 0;
   out_8642747047737673203[37] = 0;
   out_8642747047737673203[38] = 0;
   out_8642747047737673203[39] = 0;
   out_8642747047737673203[40] = 0;
   out_8642747047737673203[41] = 0;
   out_8642747047737673203[42] = 0;
   out_8642747047737673203[43] = 0;
   out_8642747047737673203[44] = 0;
   out_8642747047737673203[45] = 0;
   out_8642747047737673203[46] = 1;
   out_8642747047737673203[47] = 0;
   out_8642747047737673203[48] = 0;
   out_8642747047737673203[49] = 0;
   out_8642747047737673203[50] = 0;
   out_8642747047737673203[51] = 0;
   out_8642747047737673203[52] = 0;
   out_8642747047737673203[53] = 0;
   out_8642747047737673203[54] = 0;
   out_8642747047737673203[55] = 0;
   out_8642747047737673203[56] = 0;
   out_8642747047737673203[57] = 0;
   out_8642747047737673203[58] = 0;
   out_8642747047737673203[59] = 0;
   out_8642747047737673203[60] = 0;
   out_8642747047737673203[61] = 0;
   out_8642747047737673203[62] = 0;
   out_8642747047737673203[63] = 0;
   out_8642747047737673203[64] = 0;
   out_8642747047737673203[65] = 0;
}
void h_31(double *state, double *unused, double *out_8663581636506766747) {
   out_8663581636506766747[0] = state[7];
   out_8663581636506766747[1] = state[8];
   out_8663581636506766747[2] = state[9];
}
void H_31(double *state, double *unused, double *out_7058433993646864704) {
   out_7058433993646864704[0] = 0;
   out_7058433993646864704[1] = 0;
   out_7058433993646864704[2] = 0;
   out_7058433993646864704[3] = 0;
   out_7058433993646864704[4] = 0;
   out_7058433993646864704[5] = 0;
   out_7058433993646864704[6] = 0;
   out_7058433993646864704[7] = 1;
   out_7058433993646864704[8] = 0;
   out_7058433993646864704[9] = 0;
   out_7058433993646864704[10] = 0;
   out_7058433993646864704[11] = 0;
   out_7058433993646864704[12] = 0;
   out_7058433993646864704[13] = 0;
   out_7058433993646864704[14] = 0;
   out_7058433993646864704[15] = 0;
   out_7058433993646864704[16] = 0;
   out_7058433993646864704[17] = 0;
   out_7058433993646864704[18] = 0;
   out_7058433993646864704[19] = 0;
   out_7058433993646864704[20] = 0;
   out_7058433993646864704[21] = 0;
   out_7058433993646864704[22] = 0;
   out_7058433993646864704[23] = 0;
   out_7058433993646864704[24] = 0;
   out_7058433993646864704[25] = 0;
   out_7058433993646864704[26] = 0;
   out_7058433993646864704[27] = 0;
   out_7058433993646864704[28] = 0;
   out_7058433993646864704[29] = 0;
   out_7058433993646864704[30] = 1;
   out_7058433993646864704[31] = 0;
   out_7058433993646864704[32] = 0;
   out_7058433993646864704[33] = 0;
   out_7058433993646864704[34] = 0;
   out_7058433993646864704[35] = 0;
   out_7058433993646864704[36] = 0;
   out_7058433993646864704[37] = 0;
   out_7058433993646864704[38] = 0;
   out_7058433993646864704[39] = 0;
   out_7058433993646864704[40] = 0;
   out_7058433993646864704[41] = 0;
   out_7058433993646864704[42] = 0;
   out_7058433993646864704[43] = 0;
   out_7058433993646864704[44] = 0;
   out_7058433993646864704[45] = 0;
   out_7058433993646864704[46] = 0;
   out_7058433993646864704[47] = 0;
   out_7058433993646864704[48] = 0;
   out_7058433993646864704[49] = 0;
   out_7058433993646864704[50] = 0;
   out_7058433993646864704[51] = 0;
   out_7058433993646864704[52] = 0;
   out_7058433993646864704[53] = 1;
   out_7058433993646864704[54] = 0;
   out_7058433993646864704[55] = 0;
   out_7058433993646864704[56] = 0;
   out_7058433993646864704[57] = 0;
   out_7058433993646864704[58] = 0;
   out_7058433993646864704[59] = 0;
   out_7058433993646864704[60] = 0;
   out_7058433993646864704[61] = 0;
   out_7058433993646864704[62] = 0;
   out_7058433993646864704[63] = 0;
   out_7058433993646864704[64] = 0;
   out_7058433993646864704[65] = 0;
}
void h_32(double *state, double *unused, double *out_1427867763541487384) {
   out_1427867763541487384[0] = state[3];
   out_1427867763541487384[1] = state[4];
   out_1427867763541487384[2] = state[5];
   out_1427867763541487384[3] = state[6];
}
void H_32(double *state, double *unused, double *out_4274775829228447111) {
   out_4274775829228447111[0] = 0;
   out_4274775829228447111[1] = 0;
   out_4274775829228447111[2] = 0;
   out_4274775829228447111[3] = 1;
   out_4274775829228447111[4] = 0;
   out_4274775829228447111[5] = 0;
   out_4274775829228447111[6] = 0;
   out_4274775829228447111[7] = 0;
   out_4274775829228447111[8] = 0;
   out_4274775829228447111[9] = 0;
   out_4274775829228447111[10] = 0;
   out_4274775829228447111[11] = 0;
   out_4274775829228447111[12] = 0;
   out_4274775829228447111[13] = 0;
   out_4274775829228447111[14] = 0;
   out_4274775829228447111[15] = 0;
   out_4274775829228447111[16] = 0;
   out_4274775829228447111[17] = 0;
   out_4274775829228447111[18] = 0;
   out_4274775829228447111[19] = 0;
   out_4274775829228447111[20] = 0;
   out_4274775829228447111[21] = 0;
   out_4274775829228447111[22] = 0;
   out_4274775829228447111[23] = 0;
   out_4274775829228447111[24] = 0;
   out_4274775829228447111[25] = 0;
   out_4274775829228447111[26] = 1;
   out_4274775829228447111[27] = 0;
   out_4274775829228447111[28] = 0;
   out_4274775829228447111[29] = 0;
   out_4274775829228447111[30] = 0;
   out_4274775829228447111[31] = 0;
   out_4274775829228447111[32] = 0;
   out_4274775829228447111[33] = 0;
   out_4274775829228447111[34] = 0;
   out_4274775829228447111[35] = 0;
   out_4274775829228447111[36] = 0;
   out_4274775829228447111[37] = 0;
   out_4274775829228447111[38] = 0;
   out_4274775829228447111[39] = 0;
   out_4274775829228447111[40] = 0;
   out_4274775829228447111[41] = 0;
   out_4274775829228447111[42] = 0;
   out_4274775829228447111[43] = 0;
   out_4274775829228447111[44] = 0;
   out_4274775829228447111[45] = 0;
   out_4274775829228447111[46] = 0;
   out_4274775829228447111[47] = 0;
   out_4274775829228447111[48] = 0;
   out_4274775829228447111[49] = 1;
   out_4274775829228447111[50] = 0;
   out_4274775829228447111[51] = 0;
   out_4274775829228447111[52] = 0;
   out_4274775829228447111[53] = 0;
   out_4274775829228447111[54] = 0;
   out_4274775829228447111[55] = 0;
   out_4274775829228447111[56] = 0;
   out_4274775829228447111[57] = 0;
   out_4274775829228447111[58] = 0;
   out_4274775829228447111[59] = 0;
   out_4274775829228447111[60] = 0;
   out_4274775829228447111[61] = 0;
   out_4274775829228447111[62] = 0;
   out_4274775829228447111[63] = 0;
   out_4274775829228447111[64] = 0;
   out_4274775829228447111[65] = 0;
   out_4274775829228447111[66] = 0;
   out_4274775829228447111[67] = 0;
   out_4274775829228447111[68] = 0;
   out_4274775829228447111[69] = 0;
   out_4274775829228447111[70] = 0;
   out_4274775829228447111[71] = 0;
   out_4274775829228447111[72] = 1;
   out_4274775829228447111[73] = 0;
   out_4274775829228447111[74] = 0;
   out_4274775829228447111[75] = 0;
   out_4274775829228447111[76] = 0;
   out_4274775829228447111[77] = 0;
   out_4274775829228447111[78] = 0;
   out_4274775829228447111[79] = 0;
   out_4274775829228447111[80] = 0;
   out_4274775829228447111[81] = 0;
   out_4274775829228447111[82] = 0;
   out_4274775829228447111[83] = 0;
   out_4274775829228447111[84] = 0;
   out_4274775829228447111[85] = 0;
   out_4274775829228447111[86] = 0;
   out_4274775829228447111[87] = 0;
}
void h_13(double *state, double *unused, double *out_2549469855511810888) {
   out_2549469855511810888[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_2549469855511810888[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_2549469855511810888[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_7089291747604569330) {
   out_7089291747604569330[0] = 0;
   out_7089291747604569330[1] = 0;
   out_7089291747604569330[2] = 0;
   out_7089291747604569330[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7089291747604569330[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7089291747604569330[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_7089291747604569330[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7089291747604569330[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_7089291747604569330[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_7089291747604569330[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_7089291747604569330[10] = 0;
   out_7089291747604569330[11] = 0;
   out_7089291747604569330[12] = 0;
   out_7089291747604569330[13] = 0;
   out_7089291747604569330[14] = 0;
   out_7089291747604569330[15] = 0;
   out_7089291747604569330[16] = 0;
   out_7089291747604569330[17] = 0;
   out_7089291747604569330[18] = 0;
   out_7089291747604569330[19] = 0;
   out_7089291747604569330[20] = 0;
   out_7089291747604569330[21] = 0;
   out_7089291747604569330[22] = 0;
   out_7089291747604569330[23] = 0;
   out_7089291747604569330[24] = 0;
   out_7089291747604569330[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7089291747604569330[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7089291747604569330[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7089291747604569330[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_7089291747604569330[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_7089291747604569330[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_7089291747604569330[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_7089291747604569330[32] = 0;
   out_7089291747604569330[33] = 0;
   out_7089291747604569330[34] = 0;
   out_7089291747604569330[35] = 0;
   out_7089291747604569330[36] = 0;
   out_7089291747604569330[37] = 0;
   out_7089291747604569330[38] = 0;
   out_7089291747604569330[39] = 0;
   out_7089291747604569330[40] = 0;
   out_7089291747604569330[41] = 0;
   out_7089291747604569330[42] = 0;
   out_7089291747604569330[43] = 0;
   out_7089291747604569330[44] = 0;
   out_7089291747604569330[45] = 0;
   out_7089291747604569330[46] = 0;
   out_7089291747604569330[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7089291747604569330[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_7089291747604569330[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7089291747604569330[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7089291747604569330[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_7089291747604569330[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_7089291747604569330[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_7089291747604569330[54] = 0;
   out_7089291747604569330[55] = 0;
   out_7089291747604569330[56] = 0;
   out_7089291747604569330[57] = 0;
   out_7089291747604569330[58] = 0;
   out_7089291747604569330[59] = 0;
   out_7089291747604569330[60] = 0;
   out_7089291747604569330[61] = 0;
   out_7089291747604569330[62] = 0;
   out_7089291747604569330[63] = 0;
   out_7089291747604569330[64] = 0;
   out_7089291747604569330[65] = 0;
}
void h_14(double *state, double *unused, double *out_4479381555540235079) {
   out_4479381555540235079[0] = state[10];
   out_4479381555540235079[1] = state[11];
   out_4479381555540235079[2] = state[12];
}
void H_14(double *state, double *unused, double *out_3864480286335302053) {
   out_3864480286335302053[0] = 0;
   out_3864480286335302053[1] = 0;
   out_3864480286335302053[2] = 0;
   out_3864480286335302053[3] = 0;
   out_3864480286335302053[4] = 0;
   out_3864480286335302053[5] = 0;
   out_3864480286335302053[6] = 0;
   out_3864480286335302053[7] = 0;
   out_3864480286335302053[8] = 0;
   out_3864480286335302053[9] = 0;
   out_3864480286335302053[10] = 1;
   out_3864480286335302053[11] = 0;
   out_3864480286335302053[12] = 0;
   out_3864480286335302053[13] = 0;
   out_3864480286335302053[14] = 0;
   out_3864480286335302053[15] = 0;
   out_3864480286335302053[16] = 0;
   out_3864480286335302053[17] = 0;
   out_3864480286335302053[18] = 0;
   out_3864480286335302053[19] = 0;
   out_3864480286335302053[20] = 0;
   out_3864480286335302053[21] = 0;
   out_3864480286335302053[22] = 0;
   out_3864480286335302053[23] = 0;
   out_3864480286335302053[24] = 0;
   out_3864480286335302053[25] = 0;
   out_3864480286335302053[26] = 0;
   out_3864480286335302053[27] = 0;
   out_3864480286335302053[28] = 0;
   out_3864480286335302053[29] = 0;
   out_3864480286335302053[30] = 0;
   out_3864480286335302053[31] = 0;
   out_3864480286335302053[32] = 0;
   out_3864480286335302053[33] = 1;
   out_3864480286335302053[34] = 0;
   out_3864480286335302053[35] = 0;
   out_3864480286335302053[36] = 0;
   out_3864480286335302053[37] = 0;
   out_3864480286335302053[38] = 0;
   out_3864480286335302053[39] = 0;
   out_3864480286335302053[40] = 0;
   out_3864480286335302053[41] = 0;
   out_3864480286335302053[42] = 0;
   out_3864480286335302053[43] = 0;
   out_3864480286335302053[44] = 0;
   out_3864480286335302053[45] = 0;
   out_3864480286335302053[46] = 0;
   out_3864480286335302053[47] = 0;
   out_3864480286335302053[48] = 0;
   out_3864480286335302053[49] = 0;
   out_3864480286335302053[50] = 0;
   out_3864480286335302053[51] = 0;
   out_3864480286335302053[52] = 0;
   out_3864480286335302053[53] = 0;
   out_3864480286335302053[54] = 0;
   out_3864480286335302053[55] = 0;
   out_3864480286335302053[56] = 1;
   out_3864480286335302053[57] = 0;
   out_3864480286335302053[58] = 0;
   out_3864480286335302053[59] = 0;
   out_3864480286335302053[60] = 0;
   out_3864480286335302053[61] = 0;
   out_3864480286335302053[62] = 0;
   out_3864480286335302053[63] = 0;
   out_3864480286335302053[64] = 0;
   out_3864480286335302053[65] = 0;
}
void h_33(double *state, double *unused, double *out_2749875488518733959) {
   out_2749875488518733959[0] = state[16];
   out_2749875488518733959[1] = state[17];
   out_2749875488518733959[2] = state[18];
}
void H_33(double *state, double *unused, double *out_3907876989008007100) {
   out_3907876989008007100[0] = 0;
   out_3907876989008007100[1] = 0;
   out_3907876989008007100[2] = 0;
   out_3907876989008007100[3] = 0;
   out_3907876989008007100[4] = 0;
   out_3907876989008007100[5] = 0;
   out_3907876989008007100[6] = 0;
   out_3907876989008007100[7] = 0;
   out_3907876989008007100[8] = 0;
   out_3907876989008007100[9] = 0;
   out_3907876989008007100[10] = 0;
   out_3907876989008007100[11] = 0;
   out_3907876989008007100[12] = 0;
   out_3907876989008007100[13] = 0;
   out_3907876989008007100[14] = 0;
   out_3907876989008007100[15] = 0;
   out_3907876989008007100[16] = 1;
   out_3907876989008007100[17] = 0;
   out_3907876989008007100[18] = 0;
   out_3907876989008007100[19] = 0;
   out_3907876989008007100[20] = 0;
   out_3907876989008007100[21] = 0;
   out_3907876989008007100[22] = 0;
   out_3907876989008007100[23] = 0;
   out_3907876989008007100[24] = 0;
   out_3907876989008007100[25] = 0;
   out_3907876989008007100[26] = 0;
   out_3907876989008007100[27] = 0;
   out_3907876989008007100[28] = 0;
   out_3907876989008007100[29] = 0;
   out_3907876989008007100[30] = 0;
   out_3907876989008007100[31] = 0;
   out_3907876989008007100[32] = 0;
   out_3907876989008007100[33] = 0;
   out_3907876989008007100[34] = 0;
   out_3907876989008007100[35] = 0;
   out_3907876989008007100[36] = 0;
   out_3907876989008007100[37] = 0;
   out_3907876989008007100[38] = 0;
   out_3907876989008007100[39] = 1;
   out_3907876989008007100[40] = 0;
   out_3907876989008007100[41] = 0;
   out_3907876989008007100[42] = 0;
   out_3907876989008007100[43] = 0;
   out_3907876989008007100[44] = 0;
   out_3907876989008007100[45] = 0;
   out_3907876989008007100[46] = 0;
   out_3907876989008007100[47] = 0;
   out_3907876989008007100[48] = 0;
   out_3907876989008007100[49] = 0;
   out_3907876989008007100[50] = 0;
   out_3907876989008007100[51] = 0;
   out_3907876989008007100[52] = 0;
   out_3907876989008007100[53] = 0;
   out_3907876989008007100[54] = 0;
   out_3907876989008007100[55] = 0;
   out_3907876989008007100[56] = 0;
   out_3907876989008007100[57] = 0;
   out_3907876989008007100[58] = 0;
   out_3907876989008007100[59] = 0;
   out_3907876989008007100[60] = 0;
   out_3907876989008007100[61] = 0;
   out_3907876989008007100[62] = 1;
   out_3907876989008007100[63] = 0;
   out_3907876989008007100[64] = 0;
   out_3907876989008007100[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_3155115096055378676) {
  H(in_vec, out_3155115096055378676);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_8395496394702832161) {
  err_fun(nom_x, delta_x, out_8395496394702832161);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_8916956029375892266) {
  inv_err_fun(nom_x, true_x, out_8916956029375892266);
}
void live_H_mod_fun(double *state, double *out_4679673059438427241) {
  H_mod_fun(state, out_4679673059438427241);
}
void live_f_fun(double *state, double dt, double *out_8106099418900950754) {
  f_fun(state,  dt, out_8106099418900950754);
}
void live_F_fun(double *state, double dt, double *out_4673684726810862167) {
  F_fun(state,  dt, out_4673684726810862167);
}
void live_h_4(double *state, double *unused, double *out_5235680874440460819) {
  h_4(state, unused, out_5235680874440460819);
}
void live_H_4(double *state, double *unused, double *out_3623290639705711408) {
  H_4(state, unused, out_3623290639705711408);
}
void live_h_9(double *state, double *unused, double *out_4479381555540235079) {
  h_9(state, unused, out_4479381555540235079);
}
void live_H_9(double *state, double *unused, double *out_3864480286335302053) {
  H_9(state, unused, out_3864480286335302053);
}
void live_h_10(double *state, double *unused, double *out_2164176216250742354) {
  h_10(state, unused, out_2164176216250742354);
}
void live_H_10(double *state, double *unused, double *out_3212870814963671173) {
  H_10(state, unused, out_3212870814963671173);
}
void live_h_12(double *state, double *unused, double *out_4049753783849693471) {
  h_12(state, unused, out_4049753783849693471);
}
void live_H_12(double *state, double *unused, double *out_8642747047737673203) {
  H_12(state, unused, out_8642747047737673203);
}
void live_h_31(double *state, double *unused, double *out_8663581636506766747) {
  h_31(state, unused, out_8663581636506766747);
}
void live_H_31(double *state, double *unused, double *out_7058433993646864704) {
  H_31(state, unused, out_7058433993646864704);
}
void live_h_32(double *state, double *unused, double *out_1427867763541487384) {
  h_32(state, unused, out_1427867763541487384);
}
void live_H_32(double *state, double *unused, double *out_4274775829228447111) {
  H_32(state, unused, out_4274775829228447111);
}
void live_h_13(double *state, double *unused, double *out_2549469855511810888) {
  h_13(state, unused, out_2549469855511810888);
}
void live_H_13(double *state, double *unused, double *out_7089291747604569330) {
  H_13(state, unused, out_7089291747604569330);
}
void live_h_14(double *state, double *unused, double *out_4479381555540235079) {
  h_14(state, unused, out_4479381555540235079);
}
void live_H_14(double *state, double *unused, double *out_3864480286335302053) {
  H_14(state, unused, out_3864480286335302053);
}
void live_h_33(double *state, double *unused, double *out_2749875488518733959) {
  h_33(state, unused, out_2749875488518733959);
}
void live_H_33(double *state, double *unused, double *out_3907876989008007100) {
  H_33(state, unused, out_3907876989008007100);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
